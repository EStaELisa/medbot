services:
  # Service responsible for importing data into the database
  dataimporter:
    build:
      context: ..
      dockerfile: .dockerisation/dockerfiles/dataimporter/Dockerfile
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ../:/workspaces:cached
    environment:
      PGUSER: postgres
      PGDATABASE: postgres
      PGPASSWORD: postgres
      PGHOST: db
      PGPORT: 5432
    # Ensures the container does not exit after the process ends
    command: ["bash", "-c", "python import_data_sql.py && sleep infinity"]
    network_mode: service:db

  # Frontend service running on port 3000
  frontend:
    build:
      context: ../frontend
      dockerfile: ../.dockerisation/dockerfiles/frontend/Dockerfile
    ports:
      - 3000:3000
    depends_on:
      fastapibackend:
        condition: service_healthy

  # Backend service running FastAPI on port 80
  fastapibackend:
    build:
      context: ../fastapi_backend
      dockerfile: ../.dockerisation/dockerfiles/backend_api/Dockerfile
    environment:
      PGUSER: postgres
      PGDATABASE: postgres
      PGPASSWORD: postgres
      PGHOST: db
      PGPORT: 5432
    ports:
      - 80:80
    # Health check to ensure service availability
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/health" ]
      interval: 10s
      timeout: 5s
      retries: 30

  # PostgreSQL database service
  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - 1337:5432
    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

# Define persistent storage for the database
volumes:
  postgres-data: